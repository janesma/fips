# -*- makefile -*-

gdir := grafips

grafips_srcs = \
	gfcpu_source.cpp \
	gfgl_source.cpp \
	gfgpu_perf_source.cpp \
	gfmetric.cpp \
	gfmutex.cpp \
	gfpublisher.cpp \
	gfpublisher_skel.cpp \
	gfsocket.cpp \
	gfsubscriber_stub.cpp \
	gfthread.cpp \
	publish.cpp \

grafips_proto = \
	gfmetric.proto \
	gfpublisher.proto \
	gfsubscriber.proto \

grafips_proto_gen_h = $(grafips_proto:%.proto=%.pb.h)
grafips_proto_gen_cc = $(grafips_proto:%.proto=%.pb.cc)

grafips_32_modules = $(grafips_srcs:.cpp=-32.o) $(grafips_proto_gen_cc:.cc=-32.o)
grafips_64_modules = $(grafips_srcs:.cpp=-64.o) $(grafips_proto_gen_cc:.cc=-64.o)

VPATH = $(gdir)/sources:$(gdir)/remote:$(gdir)/os:$(gdir)

gen: $(grafips_proto_gen_cc) $(grafips_proto_gen_h)

%.pb.h %.pb.cc: %.proto
	protoc --cpp_out=. -I=$(gdir)/remote $<

%-32.o: %.cpp $(global_deps) | gen
	@mkdir -p .deps/$(@D)
	$(call quiet,CPP $(CFLAGS) -m32) -c $(CPPFLAGS) $(LIBFIPS_CFLAGS) -m32 $< -o $@ -MD -MP -MF .deps/$*.d

%-32.o: %.cc $(global_deps) | gen
	@mkdir -p .deps/$(@D)
	$(call quiet,CPP $(CFLAGS) -m32) -c $(CPPFLAGS) $(LIBFIPS_CFLAGS) -m32 $< -o $@ -MD -MP -MF .deps/$*.d

%-64.o: %.cpp $(global_deps) | gen
	@mkdir -p .deps/$(@D)
	$(call quiet,CPP $(CFLAGS) -m64) -c $(CPPFLAGS) $(LIBFIPS_CFLAGS) -m64 $< -o $@ -MD -MP -MF .deps/$*.d

%-64.o: %.cc $(global_deps) | gen
	@mkdir -p .deps/$(@D)
	$(call quiet,CPP $(CFLAGS) -m64) -c $(CPPFLAGS) $(LIBFIPS_CFLAGS) -m64 $< -o $@ -MD -MP -MF .deps/$*.d

libgrafips-32.a: $(grafips_32_modules)
	@rm -f $@
	$(call quiet,AR) -rcs -o $@ $(grafips_32_modules)

libgrafips-64.a: $(grafips_64_modules)
	@rm -f $@
	$(call quiet,AR) -rcs -o $@ $(grafips_64_modules)



